CREATE DATABASE MINIMARKET_CHAIN;

USE MINIMARKET_CHAIN;

# Observation: In the MINIMARKET table, we included the LOCATION field because each minimarket has
# a unique location. It would not make sense to create a separate LOCATION table. In the
# WAREHOUSE table, we included the PRODUCT_CATEGORY_NAME, SUPPLIER_NAME, and COUNTRY_ORIGIN_NAME
# fields because each product in the warehouse has unique values for these fields. It would not make
# sense to create separate tables for each of these fields.

# Creating the Log Table that keeps track of changes in the datset.
CREATE TABLE IF NOT EXISTS `LOG` (
`LOG_ID` integer UNSIGNED AUTO_INCREMENT,
`DATE_TIME` DATETIME,
`USER` varchar (250),
`ACTION` varchar (250),
`MESSAGE` varchar (250),
PRIMARY KEY (`LOG_ID`)
);

# Creating the Region Table.
CREATE TABLE IF NOT EXISTS `REGION` (
`REGION_ID` varchar(3) NOT NULL,
`REGION_NAME` varchar(10) NOT NULL,
PRIMARY KEY (`REGION_ID`)
);

# Inserting data into the Region Table.
INSERT INTO `REGION` (`REGION_ID`, `REGION_NAME`) VALUES
('R1', 'SUL'),
('R2', 'CENTRO'),
('R3', 'NORTE');

# Creating the Minimarket Table.
CREATE TABLE IF NOT EXISTS `MINIMARKET` (
`MINIMARKET_ID` varchar(4) NOT NULL,
`MINIMARKET_NAME` varchar(20) NOT NULL,
`LOCATION` varchar(15) NOT NULL,
`ADRESS` varchar(50) NOT NULL,
`MANAGER_ID` varchar(6) NOT NULL,
`REGION_ID` varchar(3) NOT NULL,
PRIMARY KEY (`MINIMARKET_ID`),
CONSTRAINT `fk1_MINIMARKET`
FOREIGN KEY (`REGION_ID`)
REFERENCES `REGION` (`REGION_ID`)
ON DELETE RESTRICT
ON UPDATE CASCADE
);

# Inserting data into the Minimarket Table.
INSERT INTO `MINIMARKET` (`MINIMARKET_ID`, `MINIMARKET_NAME`, `LOCATION`, `ADRESS`, `MANAGER_ID`, `REGION_ID`) VALUES 
('M10', 'BOMPRECO_LISBOA', 'LISBOA', 'AVENIDA DOM CARLOS I 125', 'E1001', 'R2'),
('M20', 'BOMPRECO_OEIRAS', 'OEIRAS', 'RUA DE S. PAULO 2', 'E1004', 'R2'),
('M30', 'BOMPRECO_FARO', 'FARO', 'RUA 1 DE MAIO 2', 'E1007', 'R1'),
('M40', 'BOMPRECO_PORTIMÃO', 'PORTIMÃO', 'RUA ENGENHEIRO CANCELA DE ABREU 14', 'E1010', 'R1'),
('M50', 'BOMPRECO_AVEIRO', 'AVEIRO', 'AVENIDA DR. LOURENÇO PEIXINHO 140', 'E1013', 'R3'),
('M60', 'BOMPRECO_PORTO', 'PORTO', 'RUA FARIA GUIMARÃES 176', 'E1016', 'R3');

# Creating the Outsourcing Table.
CREATE TABLE IF NOT EXISTS `OUTSOURCING` (
`OUTSOURCING_ID` varchar(6) NOT NULL,
`OUTSOURCING_NAME` varchar(30) NOT NULL,
`PAYMENT_DATE`date NOT NULL,
`OUTSOURCING_PRICE` decimal(7,2) NOT NULL,
`MINIMARKET_ID`varchar(4) NOT NULL,
PRIMARY KEY (`OUTSOURCING_ID`),
CONSTRAINT `fk1_OUTSOURCING`
FOREIGN KEY (`MINIMARKET_ID`)
REFERENCES `MINIMARKET` (`MINIMARKET_ID`)
ON DELETE RESTRICT
ON UPDATE CASCADE
);

# Inserting data into the Outsourcing Table.
INSERT INTO `OUTSOURCING` (`OUTSOURCING_ID`, `OUTSOURCING_NAME`, `PAYMENT_DATE`, `OUTSOURCING_PRICE`, `MINIMARKET_ID`) VALUES
('OS1001', 'PLUMBER', '2020-08-20', '200', 'M20'),
('OS1002', 'PLUMBER', '2020-10-09', '50', 'M50'), 
('OS1003', 'RENT', '2020-12-31', '12000', 'M10'),
('OS1004', 'ELECTRICITY BILL', '2020-12-31', '3600', 'M10'),
('OS1005', 'RENT', '2020-12-31', '11000', 'M20'),
('OS1006', 'ELECTRICITY BILL', '2020-12-31', '3700', 'M20'),
('OS1007', 'RENT', '2020-12-31', '9600', 'M30'),
('OS1008', 'ELECTRICITY BILL', '2020-12-31', '3800', 'M30'),
('OS1009', 'RENT', '2020-12-31', '8000', 'M40'),
('OS1010', 'ELECTRICITY BILL', '2020-12-31', '3400', 'M40'),
('OS1011', 'RENT', '2020-12-31', '11000', 'M50'),
('OS1012', 'ELECTRICITY BILL', '2020-12-31', '3500', 'M50'),
('OS1013', 'RENT', '2020-12-31', '7500', 'M60'),
('OS1014', 'ELECTRICITY BILL', '2020-12-31', '3300', 'M60'),
('OS1015', 'PLUMBER', '2021-05-15', '100', 'M10'),
('OS1016', 'PLUMBER', '2021-12-19', '300', 'M40'),
('OS1017', 'RENT', '2021-12-31', '12500', 'M10'),
('OS1018', 'ELECTRICITY BILL', '2021-12-31', '4000', 'M10'),
('OS1019', 'RENT', '2021-12-31', '11500', 'M20'),
('OS1020', 'ELECTRICITY BILL', '2021-12-31', '4100', 'M20'),
('OS1021', 'RENT', '2021-12-31', '10000', 'M30'),
('OS1022', 'ELECTRICITY BILL', '2021-12-31', '4200', 'M30'),
('OS1023', 'RENT', '2021-12-31', '9000', 'M40'),
('OS1024', 'ELECTRICITY BILL', '2021-12-31', '3800', 'M40'),
('OS1025', 'RENT', '2021-12-31', '11500', 'M50'),
('OS1026', 'ELECTRICITY BILL', '2021-12-31', '3900', 'M50'),
('OS1027', 'RENT', '2021-12-31', '8500', 'M60'),
('OS1028', 'ELECTRICITY BILL', '2021-12-31', '3700', 'M60'),
('OS1029', 'PLUMBER', '2022-01-06', '150', 'M30'),
('OS1030', 'PLUMBER', '2022-10-20', '75', 'M60'),
('OS1031', 'RENT', '2022-12-31', '13000', 'M10'),
('OS1032', 'ELECTRICITY BILL', '2022-12-31', '4400', 'M10'),
('OS1033', 'RENT', '2022-12-31', '12000', 'M20'),
('OS1034', 'ELECTRICITY BILL', '2022-12-31', '4500', 'M20'),
('OS1035', 'RENT', '2022-12-31', '10400', 'M30'),
('OS1036', 'ELECTRICITY BILL', '2022-12-31', '4600', 'M30'),
('OS1037', 'RENT', '2022-12-31', '9500', 'M40'),
('OS1038', 'ELECTRICITY BILL', '2022-12-31', '4200', 'M40'),
('OS1039', 'RENT', '2022-12-31', '12000', 'M50'),
('OS1040', 'ELECTRICITY BILL', '2022-12-31', '4300', 'M50'),
('OS1041', 'RENT', '2022-12-31', '9000', 'M60'),
('OS1042', 'ELECTRICITY BILL', '2022-12-31', '4100', 'M60');

# Creating the Role Table.
CREATE TABLE IF NOT EXISTS `ROLE` (
`ROLE_ID` varchar(5) NOT NULL,
`ROLE_TITLE` varchar(25) NOT NULL,
`MIN_SALARY` smallint NOT NULL,
`MAX_SALARY` smallint NOT NULL,
PRIMARY KEY (`ROLE_ID`)
);

# Inserting data into the Role Table.
INSERT INTO `ROLE` (`ROLE_ID`, `ROLE_TITLE`, `MIN_SALARY`, `MAX_SALARY`) VALUES 
('R100', 'MANAGER', '1700', '2400'),
('R200', 'CASHIER', '1700', '2400'),
('R300', 'JANITOR', '705', '1100'),
('R400', 'INVENTORY MANAGEMENT', '800', '1100');

# Creating the Employee Table.
CREATE TABLE IF NOT EXISTS `EMPLOYEE` (
`EMPLOYEE_ID` varchar(6) NOT NULL,
`FIRST_NAME` varchar(20) NOT NULL,
`LAST_NAME` varchar(20) NOT NULL,
`EMAIL`varchar(40) NOT NULL,
`PHONE_NUMBER`varchar(15) NOT NULL,
`HIRE_DATE`date NOT NULL,
`SALARY`smallint NOT NULL,
`MINIMARKET_ID` varchar(4) NOT NULL,
PRIMARY KEY (`EMPLOYEE_ID`),
CONSTRAINT `fk1_EMPLOYEE`
FOREIGN KEY (`MINIMARKET_ID`)
REFERENCES `MINIMARKET` (`MINIMARKET_ID`)
ON DELETE RESTRICT
ON UPDATE CASCADE
);

# Inserting data into the Employee Table.
INSERT INTO `EMPLOYEE` (`EMPLOYEE_ID`, `FIRST_NAME`, `LAST_NAME`, `EMAIL`, `PHONE_NUMBER`, `HIRE_DATE`, `SALARY`, `MINIMARKET_ID`) VALUES
('E1001', 'DUARTE', 'GIRÃO', 'duartegirao@gmail.com', '968 642 393', '2003-12-01', '1800', 'M10'),
('E1002', 'MIGUEL', 'RAMOS', 'miguelramos19@gmail.com', '916 081 372', '2005-03-15', '900', 'M10'),
('E1003', 'EDUARDO', 'PALMA', 'eduardopalma@gmail.com', '936 045 342', '1990-06-11', '1000', 'M10'),
('E1004', 'CORSSINO', 'TCHAVANA', 'corssinotchavana@gmail.com', '916 231 136', '1999-07-08', '2000', 'M20'),
('E1005', 'JOSÉ MIGUEL', 'MATOS', 'josemiguelmatos@gmail.com', '961 022 349', '1998-08-05', '950', 'M20'),
('E1006', 'NUNO', 'ALPALHÃO', 'nuno.alpalhao@gmail.com', '914 001 912', '2017-10-11', '1100', 'M20'),
('E1007', 'MIJAIL', 'NARANJO', 'mijailnaranjo@gmail.com', '926 080 111', '2001-09-24', '2100', 'M30'),
('E1008', 'OSCAR', 'ANDRADE', 'oscar.andrade88@gmail.com', '967 123 374', '2022-11-11', '705', 'M30'),
('E1009', 'BRUNO', 'FERNANDES', 'brunofernandes@gmail.com', '911 000 191', '2014-04-15', '1000', 'M30'),
('E1010', 'JOSE', 'FARIA', 'josefaria@gmail.com', '930 091 391', '2017-02-21', '2200', 'M40'),
('E1011', 'RICARDO', 'SANTOS', 'ricardo_santos74@gmail.com', '932 076 302', '2007-11-03', '1100', 'M40'),
('E1012', 'ANDRÉ', 'FERNANDES', 'andrefernandes@gmail.com', '916 111 400', '2014-06-06', '900', 'M40'),
('E1013', 'CARLOS', 'SOUSA', 'carlos.sousa@gmail.com', '922 124 761', '2011-08-09', '1700', 'M50'),
('E1014', 'TIAGO', 'SILVA', 'tiago_silva23@gmail.com', '917 065 176', '2018-02-04', '1050', 'M50'),
('E1015', 'DANIELA', 'PEREIRA', 'danielapereira95@hotmail.com', '934 012 765', '1992-04-15', '1100', 'M50'),
('E1016', 'BEATRIZ', 'CRUZ', 'beatriz.cruz1997@yahoo.com', '911 872 129', '2019-11-26', '2400', 'M60'),
('E1017', 'RITA', 'SILVESTRE', 'ritasilvestre@gmail.com', '918 871 236', '1995-01-27', '900', 'M60'),
('E1018', 'HENRIQUE', 'BARROS', 'andrefernandes@gmail.com', '965 118 516', '2019-04-15', '800', 'M60');
  
# Creating the Linking Table.
CREATE TABLE IF NOT EXISTS `ROLE_HAS_EMPLOYEE` (
`EMPLOYEE_ID` varchar(6) NOT NULL,
`ROLE_ID` varchar(5) NOT NULL,
PRIMARY KEY (`ROLE_ID`, `EMPLOYEE_ID`),
CONSTRAINT `fk_ROLE_HAS_EMPLOYEE1`
FOREIGN KEY (`ROLE_ID`)
REFERENCES `ROLE` (`ROLE_ID`)
ON DELETE RESTRICT
ON UPDATE CASCADE,
CONSTRAINT `fk_ROLE_HAS_EMPLOYEE2`
FOREIGN KEY (`EMPLOYEE_ID`)
REFERENCES `EMPLOYEE` (`EMPLOYEE_ID`)
ON DELETE RESTRICT
ON UPDATE CASCADE
);
  
# Inserting data into the Linking Table.
INSERT INTO `ROLE_HAS_EMPLOYEE` (`EMPLOYEE_ID`, `ROLE_ID`) VALUES
 ('E1001', 'R200'),
 ('E1001', 'R100'),
 ('E1002', 'R300'),
 ('E1003', 'R400'),
 ('E1004', 'R200'),
 ('E1004', 'R100'),
 ('E1005', 'R300'),
 ('E1006', 'R400'),
 ('E1007', 'R200'),
 ('E1007', 'R100'),
 ('E1008', 'R300'),
 ('E1009', 'R400'),
 ('E1010', 'R200'),
 ('E1010', 'R100'),
 ('E1011', 'R300'),
 ('E1012', 'R400'),
 ('E1013', 'R200'),
 ('E1013', 'R100'),
 ('E1014', 'R300'),
 ('E1015', 'R400'),
 ('E1016', 'R200'),
 ('E1016', 'R100'),
 ('E1017', 'R300'),
 ('E1018', 'R400');
  
# Creating the Customer Table.
CREATE TABLE IF NOT EXISTS `CUSTOMER`(
`CUSTOMER_ID` varchar(6) NOT NULL,
`CUSTOMER_FIRST_NAME` varchar(20) NOT NULL,
`CUSTOMER_LAST_NAME` varchar(20) NOT NULL,
`ADRESS` varchar(50) NOT NULL,
`PHONE`varchar(15) NOT NULL,
PRIMARY KEY (`CUSTOMER_ID`)
);

# Inserting data into the Customer Table.
INSERT INTO `CUSTOMER` (`CUSTOMER_ID`, `CUSTOMER_FIRST_NAME`, `CUSTOMER_LAST_NAME`, `ADRESS`, `PHONE`) VALUES 
 ('C1001', 'NUNO', 'BRAZ', 'RUA ANTONIO ALMEIDA LT 133A', '913425654'),
 ('C1002', 'AFONSO', 'FABIANO', 'RUA DANIEL GARRETT LT  10B', '916754324'),
 ('C1003', 'TIAGO', 'FERREIRA', 'RUA DO AÇÚCAR LT 23A', '936921378'),
 ('C1004', 'PEDRO', 'FERNANDES', 'RUA TRAVESSA DA AMOROSA LT 56B', '963564321'),
 ('C1005', 'GONÇALO', 'ROCHA', 'RUA LUIS CAMÕES LT 267A', '925678943'),
 ('C1006', 'DIOGO', 'SILVA', 'RUA ALMADA NEGREIROS LT 9B', '914567543'),
 ('C1007', 'FILIPE', 'ALVES', 'RUA LEITE VASCONCELOS LT 56A', '913489584'),
 ('C1008', 'AFONSO', 'SOUSA', 'RUA CAPITÃO HENRIQUE GALVÃO LT 108C', '961875557'),
 ('C1009', 'CARLOS', 'COSTA', 'RUA VALE FORMOSO LT 66D', '925698240'),
 ('C1010', 'MARIANA', 'MARTINS', 'AVENIDA MADRE ANDALUZ LT 113C', '938939487'),
 ('C1011', 'CARLOS', 'SOARES', 'RUA CONDES TORRE LT 29D', '911990639'),
 ('C1012', 'RENATO', 'SOARES', 'RUA JOSÉ FERNANDES GUERREIRO LT 56A', '965299768'),
 ('C1013', 'SUSANA', 'MARTINS', 'RUA CONDES TORRE LT 108A', '924628670'),
 ('C1014', 'BERNARDO', 'RODRIGUES', 'RUA TELHEIRO LT 6B', '932405774'),
 ('C1015', 'SUSANA', 'MARTINS', 'PRACETA MARIA LAMAS LT 102C', '910499211'),
 ('C1016', 'SALVADOR', 'SETAS', 'RUA VISCONDESSA ANDALUZ LT 30D', '966837846'),
 ('C1017', 'MAFALDA', 'CASANOVA', 'RUA PINHEIRO CHAGAS N20', '924617112'),
 ('C1018', 'CARLOS', 'OLVEIRA', 'ZONA ESTAÇÃO LT 8D', '937930760'),
 ('C1019', 'TERESA', 'RAMOS', 'RUA DA ALDEIA NOVA LT 15B', '914738034'),
 ('C1020', 'SUSANA', 'ALEXANDRE', 'PRACETA MARIA LAMAS LT 11C', '965362380'),
 ('C1021', 'RENATO', 'RODRIGUES', 'RUA DE SANTA CATARINA LT 10C', '921548793'),
 ('C1022', 'FILIPE', 'NEVES', 'RUA DAS FLORES LT 8D', '932218298'),
 ('C1023', 'ANA', 'CUNHA', 'RUA ESCOLA LT 19', '913949415'),
 ('C1024', 'RITA', 'RAMOS', 'RUA CENTRAL LT 7', '963256372'),
 ('C1025', 'LOURENÇO', 'CUNHA', 'RUA DA INSUA LT 14A', '924823356'),
 ('C1026', 'SALVADOR', 'RAMOS', 'AVENIDA DA LIBERDADE LT 4A', '933348364'),
 ('C1027', 'BERNARDO', 'FERREIRA', 'RUA PADRE MANUEL LARANJEIRA LT 7E', '913798625'),
 ('C1028', 'SOFIA', 'SOUSA', 'RUA DA MINA LT 8B', '969506793'),
 ('C1029', 'RITA', 'ALEXANDRE', 'ESTRADA MALCATA - QUADRAZAIS LT 10E', '926251040'),
 ('C1030', 'VASCO', 'MACHADO', 'TRAVESSA CÂNDIDO DOS REIS LT 2A', '938414938'),
 ('C1031', 'MIGUEL', 'HENRIQUES', 'RUA CENTRAL DE REDUNDO LT 7A', '913935493'),
 ('C1032', 'RODRIGO', 'NEVES', 'RUA PROENCA-A-NOVA LT 13C', '961363160'),
 ('C1033', 'VICENTE', 'SILVA', 'ESTRADA CAMPO DA AVIAÇÃO LT 12D', '929112282'),
 ('C1034', 'LOURENÇO', 'CRUZ', 'AVENIDA DE FERREIROS LT 10C', '931286988'),
 ('C1035', 'SOFIA', 'SILVA', 'RUA DO CAMPO LT 19A', '913780032'),
 ('C1036', 'ÉRICA', 'QUINTAS', 'RUA DO OUTEIRO LT 18B', '960439357'),
 ('C1037', 'LOURENÇO', 'RODRIGUES', 'RUA VALE DO MOINHO LT 18A', '926759749'),
 ('C1038', 'SOFIA', 'RODRIGUES', 'RUA DE SÃO DOMINGOS LT 17E', '936786785'),
 ('C1039', 'VASCO', 'CUNHA', 'RUA LUGAR DOS CHÕES LT 16D', '917142080'),
 ('C1040', 'ANA', 'FERNADES', 'RUA DA BUNHEIRA LT 1D', '966337440');

# Creating the Promotion Table.
CREATE TABLE IF NOT EXISTS `PROMOTION`(
`PROMOTION_ID` varchar(6) NOT NULL,
`START_DATE` date NOT NULL,
`END_DATE` date NOT NULL,
`DISCOUNT` decimal(6,5) NOT NULL,
PRIMARY KEY (`PROMOTION_ID`)
);

# Inserting data into the Promotion Table.
INSERT INTO `PROMOTION` (`PROMOTION_ID`, `START_DATE`, `END_DATE`, `DISCOUNT`) VALUES
('PR100', '2020-01-01', '2020-04-30', '0.01'),
('PR200', '2020-04-30', '2020-08-31', '0.015'),
('PR300', '2020-08-31', '2020-12-31', '0.02'),
('PR400', '2020-12-31', '2021-04-30', '0.025'),
('PR500', '2021-04-30', '2021-08-31', '0.03'),
('PR600', '2021-08-31', '2021-12-31', '0.0225'),
('PR700', '2021-12-31', '2022-04-30', '0.0125'),
('PR800', '2022-04-30', '2022-08-31', '0.0075'),
('PR900', '2022-08-31', '2022-12-31', '0.02');
    
# Creating the Invoice Table.
CREATE TABLE IF NOT EXISTS `INVOICE`(
`INVOICE_ID` varchar(6) NOT NULL,                                 
`INVOICE_DATE` date NOT NULL,
`PAYMENT_METHOD`varchar(10) NOT NULL,
`EMPLOYEE_ID` varchar(6) NOT NULL,
`PROMOTION_ID` varchar(6) NOT NULL,
`CUSTOMER_ID`varchar(6) NOT NULL,
PRIMARY KEY (`INVOICE_ID`),
CONSTRAINT `fk1_INVOICE`
FOREIGN KEY (`EMPLOYEE_ID`)
REFERENCES `EMPLOYEE` (`EMPLOYEE_ID`)
ON DELETE RESTRICT
ON UPDATE CASCADE,
CONSTRAINT `fk2_INVOICE`
FOREIGN KEY (`PROMOTION_ID`)
REFERENCES `PROMOTION` (`PROMOTION_ID`)
ON DELETE RESTRICT
ON UPDATE CASCADE,
CONSTRAINT `fk3_INVOICE`
FOREIGN KEY (`CUSTOMER_ID`)
REFERENCES `CUSTOMER` (`CUSTOMER_ID`)
ON DELETE RESTRICT
ON UPDATE CASCADE
);

CREATE INDEX idx1_INVOICE ON INVOICE(INVOICE_DATE);

# Inserting data into the Invoice Table.
INSERT INTO `INVOICE` (`INVOICE_ID`, `INVOICE_DATE`, `PAYMENT_METHOD`, `EMPLOYEE_ID`, `PROMOTION_ID`, `CUSTOMER_ID`) VALUES 
('I1001', '2020-01-08', 'CASH', 'E1001', 'PR100', 'C1001'),
('I1002', '2020-01-10', 'DEBIT CARD', 'E1001', 'PR100', 'C1002'),
('I1003', '2020-01-14', 'CASH', 'E1001', 'PR100', 'C1003'),
('I1004', '2020-02-03', 'DEBIT CARD', 'E1001', 'PR100', 'C1004'),
('I1005', '2020-02-19', 'DEBIT CARD', 'E1001', 'PR100', 'C1005'),
('I1006', '2020-02-21', 'DEBIT CARD', 'E1001', 'PR100', 'C1006'),
('I1007', '2020-03-04', 'CASH', 'E1001', 'PR100', 'C1007'),
('I1008', '2020-03-19', 'DEBIT CARD', 'E1001', 'PR100', 'C1008'),
('I1009', '2020-04-17', 'DEBIT CARD', 'E1001', 'PR100', 'C1009'),
('I1010', '2020-05-23', 'CASH', 'E1001', 'PR200', 'C1010'),
('I1011', '2020-07-28', 'DEBIT CARD', 'E1004', 'PR200', 'C1011'),
('I1012', '2020-08-07', 'DEBIT CARD', 'E1004', 'PR200', 'C1012'),
('I1013', '2020-08-29', 'DEBIT CARD', 'E1004', 'PR200', 'C1013'),
('I1014', '2020-09-27', 'CASH', 'E1004', 'PR300', 'C1014'),
('I1015', '2020-10-15', 'DEBIT CARD', 'E1004', 'PR300', 'C1015'),
('I1016', '2020-10-25', 'DEBIT CARD', 'E1004', 'PR300', 'C1016'),
('I1017', '2020-10-29', 'CASH', 'E1004', 'PR300', 'C1017'),
('I1018', '2020-11-24', 'DEBIT CARD', 'E1004', 'PR300', 'C1018'),
('I1019', '2020-12-02', 'DEBIT CARD', 'E1004', 'PR300', 'C1019'),
('I1020', '2020-12-02', 'CASH', 'E1004', 'PR300', 'C1020'),
('I1021', '2021-01-19', 'CASH', 'E1007', 'PR400', 'C1021'),
('I1022', '2021-01-20', 'DEBIT CARD', 'E1007', 'PR400', 'C1022'),
('I1023', '2021-01-24', 'DEBIT CARD', 'E1007', 'PR400', 'C1023'),
('I1024', '2021-01-30', 'CASH', 'E1007', 'PR400', 'C1024'),
('I1025', '2021-02-25', 'CASH', 'E1007', 'PR400', 'C1025'),
('I1026', '2021-03-14', 'CASH', 'E1007', 'PR400', 'C1026'),
('I1027', '2021-03-22', 'DEBIT CARD', 'E1007', 'PR400', 'C1027'),
('I1028', '2021-04-12', 'DEBIT CARD', 'E1007', 'PR400', 'C1028'),
('I1029', '2021-04-25', 'CASH', 'E1007', 'PR400', 'C1029'),
('I1030', '2021-05-06', 'DEBIT CARD', 'E1007', 'PR500', 'C1030'),
('I1031', '2021-05-12', 'CASH', 'E1010', 'PR500', 'C1031'),
('I1032', '2021-06-26', 'DEBIT CARD', 'E1010', 'PR500', 'C1032'),
('I1033', '2021-07-15', 'CASH', 'E1010', 'PR500', 'C1033'),
('I1034', '2021-08-25', 'CASH', 'E1010', 'PR500', 'C1034'),
('I1035', '2021-09-15', 'CASH', 'E1010', 'PR600', 'C1035'),
('I1036', '2021-09-24', 'DEBIT CARD', 'E1010', 'PR600', 'C1036'),
('I1037', '2021-10-06', 'CASH', 'E1010', 'PR600', 'C1037'),
('I1038', '2021-11-03', 'DEBIT CARD', 'E1010', 'PR600', 'C1038'),
('I1039', '2021-11-18', 'CASH', 'E1010', 'PR600', 'C1039'),
('I1040', '2021-11-21', 'CASH', 'E1010', 'PR600', 'C1040'),
('I1041', '2022-01-10', 'DEBIT CARD', 'E1013', 'PR700', 'C1001'),
('I1042', '2022-01-27', 'DEBIT CARD', 'E1013', 'PR700', 'C1002'),
('I1043', '2022-03-18', 'CASH', 'E1013', 'PR700', 'C1003'),
('I1044', '2022-04-01', 'CASH', 'E1013', 'PR700', 'C1004'),
('I1045', '2022-04-12', 'CASH', 'E1013', 'PR700', 'C1005'),
('I1046', '2022-04-26', 'DEBIT CARD', 'E1013', 'PR700', 'C1006'),
('I1047', '2022-04-28', 'CASH', 'E1013', 'PR700', 'C1007'),
('I1048', '2022-05-26', 'DEBIT CARD', 'E1013', 'PR800', 'C1008'),
('I1049', '2022-07-09', 'CASH', 'E1013', 'PR800', 'C1009'),
('I1050', '2022-07-28', 'CASH', 'E1013', 'PR800', 'C1010'),
('I1051', '2022-07-29', 'CASH', 'E1016', 'PR800', 'C1011'),
('I1052', '2022-09-23', 'DEBIT CARD', 'E1016', 'PR900', 'C1012'),
('I1053', '2022-10-11', 'DEBIT CARD', 'E1016', 'PR900', 'C1013'),
('I1054', '2022-10-14', 'CASH', 'E1016', 'PR900', 'C1014'),
('I1055', '2022-10-24', 'DEBIT CARD', 'E1016', 'PR900', 'C1015'),
('I1056', '2022-10-31', 'DEBIT CARD', 'E1016', 'PR900', 'C1016'),
('I1057', '2022-11-22', 'CASH', 'E1016', 'PR900', 'C1017'),
('I1058', '2022-12-05', 'DEBIT CARD', 'E1016', 'PR900', 'C1018'),
('I1059', '2022-12-10', 'CASH', 'E1016', 'PR900', 'C1019'),
('I1060', '2022-12-10', 'DEBIT CARD', 'E1016', 'PR900', 'C1020');

# Creating the Warehouse Table.
CREATE TABLE IF NOT EXISTS `WAREHOUSE`(
`BATCH_ID` varchar(5) NOT NULL,
`PRODUCT_ID` smallint NOT NULL,
`PRODUCT_NAME` varchar(15) NOT NULL,
`PRODUCT_COST` decimal(4,2) NOT NULL,
`DATE_IN` date NOT NULL,
`EXPIRATION_DATE` date NOT NULL,
`IN_WAREHOUSE` smallint NOT NULL,
`OUT_WAREHOUSE` smallint NOT NULL ,
`PRODUCT_CATEGORY_NAME` varchar(20) NOT NULL,
`SUPPLIER_NAME` varchar(30) NOT NULL,
`COUNTRY_ORIGIN_NAME` varchar(20) NOT NULL,
PRIMARY KEY (`BATCH_ID`)
);
    
# Inserting data into the Warehouse Table.
INSERT INTO `WAREHOUSE` (`BATCH_ID`, `PRODUCT_ID`, `PRODUCT_NAME`, `PRODUCT_COST`, `DATE_IN`, `EXPIRATION_DATE`, `IN_WAREHOUSE`, `OUT_WAREHOUSE`, `PRODUCT_CATEGORY_NAME`, `SUPPLIER_NAME`, `COUNTRY_ORIGIN_NAME`) VALUES
('B100', '1', 'WINE', '7', '2019-12-31', '2023-05-01', '180', '145', 'BEVERAGE', 'GRAPELAND', 'PORTUGAL'),
('B200', '2', 'HONEY', '4', '2019-11-30', '2023-04-01', '140', '110', 'SWEETENER', 'BEE COUNTRY FARM', 'ARGENTINA'),
('B300', '3', 'VINAGRETTE', '1', '2019-10-31', '2023-03-01', '160', '127', 'DRESSING', 'VINA WORLD', 'BRAZIL'),
('B400', '4', 'TUNA CAN', '0.75', '2019-09-30', '2023-02-01', '150', '122', 'CANNED GOODS', 'FIORD FISHING', 'NORWAY');
    
# Creating the Price History Table.
CREATE TABLE IF NOT EXISTS `PRICE_HISTORY`(
`PRICE_HISTORY_ID` varchar(6) NOT NULL,
`PRICE` decimal(4,2) NOT NULL,
`START_DATE` date NOT NULL,
`END_DATE` date NOT NULL,
`BATCH_ID` varchar(5) NOT NULL, 
PRIMARY KEY (`PRICE_HISTORY_ID`),
CONSTRAINT `fk1_PRICE_HISTORY`
FOREIGN KEY (`BATCH_ID`)
REFERENCES `WAREHOUSE` (`BATCH_ID`)
ON DELETE RESTRICT
ON UPDATE CASCADE
);

# Inserting data into the Price History Table.
INSERT INTO `PRICE_HISTORY` (`PRICE_HISTORY_ID`, `PRICE`, `START_DATE`, `END_DATE`, `BATCH_ID`) VALUES
('PH100', '1', '2020-01-01', '2021-06-30', 'B400'),
('PH200', '1.2', '2021-07-01', '2022-12-31', 'B400'),
('PH300', '10', '2020-01-01', '2021-06-30', 'B100'),
('PH400', '12', '2021-07-01', '2022-12-31', 'B100'),
('PH500', '1.5', '2020-01-01', '2021-06-30', 'B300'),
('PH600', '1.8', '2021-07-01', '2022-12-31', 'B300'),
('PH700', '6', '2020-01-01', '2021-06-30', 'B200'),
('PH800', '7', '2021-07-01', '2022-12-31', 'B200');
    
# Creating the Inventory Table.
CREATE TABLE IF NOT EXISTS `INVENTORY`(
`ENTRY_ID` varchar(6) NOT NULL,
`IN_INVENTORY` smallint NOT NULL,
`OUT_INVENTORY` tinyint NOT NULL,
`BATCH_ID` varchar(5) NOT NULL,
`MINIMARKET_ID` varchar(4) NOT NULL, 
PRIMARY KEY (`ENTRY_ID`),
CONSTRAINT `fk1_INVENTORY`
FOREIGN KEY (`BATCH_ID`)
REFERENCES `WAREHOUSE` (`BATCH_ID`)
ON DELETE RESTRICT
ON UPDATE CASCADE,
CONSTRAINT `fk2_INVENTORY`
FOREIGN KEY (`MINIMARKET_ID`)
REFERENCES `MINIMARKET` (`MINIMARKET_ID`)
ON DELETE RESTRICT
ON UPDATE CASCADE
);

# Inserting data into the Inventory Table.
INSERT INTO `INVENTORY` (`ENTRY_ID`, `IN_INVENTORY`, `OUT_INVENTORY`, `BATCH_ID`, `MINIMARKET_ID`) VALUES
('EI1001', '30', '14', 'B100', 'M10'),
('EI1002', '20', '12', 'B200', 'M10'),
('EI1003', '20', '13', 'B300', 'M10'),
('EI1004', '25', '19', 'B400', 'M10'),
('EI1005', '25', '12', 'B100', 'M20'),
('EI1006', '20', '18', 'B200', 'M20'),
('EI1007', '30', '10', 'B300', 'M20'),
('EI1008', '19', '11', 'B400', 'M20'),
('EI1009', '20', '10', 'B100', 'M30'),
('EI1010', '20', '15', 'B200', 'M30'),
('EI1011', '15', '11', 'B300', 'M30'),
('EI1012', '20', '17', 'B400', 'M30'),
('EI1013', '30', '10', 'B100', 'M40'),
('EI1014', '20', '14', 'B200', 'M40'),
('EI1015', '24', '16', 'B300', 'M40'),
('EI1016', '20', '10', 'B400', 'M40'),
('EI1017', '25', '14', 'B100', 'M50'),
('EI1018', '15', '13', 'B200', 'M50'),
('EI1019', '18', '13', 'B300', 'M50'),
('EI1020', '18', '10', 'B400', 'M50'),
('EI1021', '15', '11', 'B100', 'M60'),
('EI1022', '15', '10', 'B200', 'M60'),
('EI1023', '20', '12', 'B300', 'M60'),
('EI1024', '20', '10', 'B400', 'M60');

# Creating the Sales Table.
CREATE TABLE IF NOT EXISTS `SALES`(
`SALE_ID` varchar(6) NOT NULL,
`QUANTITY` tinyint NOT NULL,
`INVOICE_ID` varchar(6) NOT NULL,
`ENTRY_ID` varchar(6) NOT NULL,
`CUSTOMER_RATING` TINYINT DEFAULT NULL,
PRIMARY KEY (`SALE_ID`),
CONSTRAINT `fk1_SALES`
FOREIGN KEY (`INVOICE_ID`)
REFERENCES `INVOICE` (`INVOICE_ID`)
ON DELETE RESTRICT
ON UPDATE CASCADE,
CONSTRAINT `fk2_SALES`
FOREIGN KEY (`ENTRY_ID`)
REFERENCES `INVENTORY` (`ENTRY_ID`)
ON DELETE RESTRICT
ON UPDATE CASCADE
);

CREATE INDEX idx1_SALES ON SALES(CUSTOMER_RATING);

# Inserting data into the Sales Table.
INSERT INTO `SALES` (`SALE_ID`, `QUANTITY`, `INVOICE_ID`, `ENTRY_ID`, `CUSTOMER_RATING`) VALUES
 ('S1001', '1', 'I1001', 'EI1001', '5'),
 ('S1002', '4', 'I1002', 'EI1004', NULL),
 ('S1003', '2', 'I1002', 'EI1002', '7'),
 ('S1004', '4', 'I1003', 'EI1002', '6'),
 ('S1005', '4', 'I1003', 'EI1003', '9'),
 ('S1006', '3', 'I1003', 'EI1001', '10'),
 ('S1007', '4', 'I1004', 'EI1004', NULL),
 ('S1008', '1', 'I1005', 'EI1002', '6'),
 ('S1009', '4', 'I1005', 'EI1001', '7'),
 ('S1010', '3', 'I1006', 'EI1004', NULL),
 ('S1011', '4', 'I1006', 'EI1003', '4'),
 ('S1012', '4', 'I1006', 'EI1001', '4'),
 ('S1013', '2', 'I1007', 'EI1002', '8'),
 ('S1014', '1', 'I1008', 'EI1004', NULL),
 ('S1015', '1', 'I1008', 'EI1003', '9'),
 ('S1016', '3', 'I1009', 'EI1002', '8'),
 ('S1017', '3', 'I1009', 'EI1004', NULL),
 ('S1018', '4', 'I1009', 'EI1003', '4'),
 ('S1019', '2', 'I1010', 'EI1001', '6'),
 ('S1020', '4', 'I1010', 'EI1004', NULL),
 ('S1021', '2', 'I1011', 'EI1005', '5'),
 ('S1022', '3', 'I1012', 'EI1006', '6'),
 ('S1023', '4', 'I1012', 'EI1007', NULL),
 ('S1024', '3', 'I1013', 'EI1006', '7'),
 ('S1025', '3', 'I1013', 'EI1007', NULL),
 ('S1026', '2', 'I1013', 'EI1005', '5'),
 ('S1027', '1', 'I1014', 'EI1008', '7'),
 ('S1028', '2', 'I1015', 'EI1008', '9'),
 ('S1029', '3', 'I1015', 'EI1006', '5'),
 ('S1030', '2', 'I1016', 'EI1006', '8'),
 ('S1031', '2', 'I1016', 'EI1008', '1'),
 ('S1032', '4', 'I1016', 'EI1005', '3'),
 ('S1033', '3', 'I1017', 'EI1006', '7'),
 ('S1034', '1', 'I1018', 'EI1005', '1'),
 ('S1035', '3', 'I1018', 'EI1008', '4'),
 ('S1036', '3', 'I1019', 'EI1008', '6'),
 ('S1037', '4', 'I1019', 'EI1006', '8'),
 ('S1038', '2', 'I1019', 'EI1007', NULL),
 ('S1039', '1', 'I1020', 'EI1007', NULL),
 ('S1040', '3', 'I1020', 'EI1005', '5'),
 ('S1041', '4', 'I1021', 'EI1010', '10'),
 ('S1042', '2', 'I1022', 'EI1012', '7'),
 ('S1043', '3', 'I1022', 'EI1010', '10'),
 ('S1044', '2', 'I1023', 'EI1009', NULL),
 ('S1045', '3', 'I1023', 'EI1012', '7'),
 ('S1046', '2', 'I1023', 'EI1011', '7'),
 ('S1047', '1', 'I1024', 'EI1010', '8'),
 ('S1048', '1', 'I1025', 'EI1011', '9'),
 ('S1049', '2', 'I1025', 'EI1009', NULL),
 ('S1050', '4', 'I1026', 'EI1012', '5'),
 ('S1051', '4', 'I1026', 'EI1010', '6'),
 ('S1052', '4', 'I1026', 'EI1011', '5'),
 ('S1053', '1', 'I1027', 'EI1009', NULL),
 ('S1054', '2', 'I1028', 'EI1009', NULL),
 ('S1055', '4', 'I1028', 'EI1012', '5'),
 ('S1056', '4', 'I1029', 'EI1012', '7'),
 ('S1057', '3', 'I1029', 'EI1009', NULL),
 ('S1058', '2', 'I1029', 'EI1011', '10'),
 ('S1059', '3', 'I1030', 'EI1010', '4'),
 ('S1060', '2', 'I1030', 'EI1011', '4'),
 ('S1061', '3', 'I1031', 'EI1015', '9'),
 ('S1062', '4', 'I1032', 'EI1016', '6'),
 ('S1063', '2', 'I1032', 'EI1013', '10'),
 ('S1064', '1', 'I1033', 'EI1014', NULL),
 ('S1065', '4', 'I1033', 'EI1015', '8'),
 ('S1066', '3', 'I1033', 'EI1016', '7'),
 ('S1067', '4', 'I1034', 'EI1014', NULL),
 ('S1068', '1', 'I1035', 'EI1013', '9'),
 ('S1069', '3', 'I1035', 'EI1015', '4'),
 ('S1070', '4', 'I1036', 'EI1014', NULL),
 ('S1071', '1', 'I1036', 'EI1013', '4'),
 ('S1072', '1', 'I1036', 'EI1016', '6'),
 ('S1073', '2', 'I1037', 'EI1014', NULL),
 ('S1074', '3', 'I1038', 'EI1013', '8'),
 ('S1075', '2', 'I1038', 'EI1015', '5'),
 ('S1076', '4', 'I1039', 'EI1015', '5'),
 ('S1077', '1', 'I1039', 'EI1013', '4'),
 ('S1078', '3', 'I1039', 'EI1014', NULL),
 ('S1079', '2', 'I1040', 'EI1016', '9'),
 ('S1080', '2', 'I1040', 'EI1013', '8'),
 ('S1081', '1', 'I1041', 'EI1017', '8'),
 ('S1082', '3', 'I1042', 'EI1018', NULL),
 ('S1083', '2', 'I1042', 'EI1020', '8'),
 ('S1084', '4', 'I1043', 'EI1017', '4'),
 ('S1085', '4', 'I1043', 'EI1018', NULL),
 ('S1086', '1', 'I1043', 'EI1020', '7'),
 ('S1087', '1', 'I1044', 'EI1018', NULL),
 ('S1088', '1', 'I1045', 'EI1017', '4'),
 ('S1089', '1', 'I1045', 'EI1019', '10'),
 ('S1090', '1', 'I1046', 'EI1020', '10'),
 ('S1091', '4', 'I1046', 'EI1017', '10'),
 ('S1092', '3', 'I1046', 'EI1019', '10'),
 ('S1093', '2', 'I1047', 'EI1018', NULL),
 ('S1094', '4', 'I1048', 'EI1020', '6'),
 ('S1095', '2', 'I1048', 'EI1019', '5'),
 ('S1096', '4', 'I1049', 'EI1017', '9'),
 ('S1097', '3', 'I1049', 'EI1019', '6'),
 ('S1098', '2', 'I1049', 'EI1020', '10'),
 ('S1099', '4', 'I1050', 'EI1019', '5'),
 ('S1100', '3', 'I1050', 'EI1018', NULL),
 ('S1101', '3', 'I1051', 'EI1022', '5'),
 ('S1102', '1', 'I1052', 'EI1023', '10'),
 ('S1103', '2', 'I1052', 'EI1024', '7'),
 ('S1104', '2', 'I1053', 'EI1022', '10'),
 ('S1105', '2', 'I1053', 'EI1022', '7'),
 ('S1106', '2', 'I1053', 'EI1024', '7'),
 ('S1107', '4', 'I1054', 'EI1023', '9'),
 ('S1108', '1', 'I1055', 'EI1023', '10'),
 ('S1109', '2', 'I1055', 'EI1021', NULL),
 ('S1110', '3', 'I1056', 'EI1024', '8'),
 ('S1111', '4', 'I1056', 'EI1021', NULL),
 ('S1112', '2', 'I1056', 'EI1023', '9'),
 ('S1113', '3', 'I1057', 'EI1021', NULL),
 ('S1114', '1', 'I1058', 'EI1024', '9'),
 ('S1115', '1', 'I1058', 'EI1022', '6'),
 ('S1116', '3', 'I1059', 'EI1023', '7'),
 ('S1117', '2', 'I1059', 'EI1021', NULL),
 ('S1118', '2', 'I1059', 'EI1022', '8'),
 ('S1119', '1', 'I1060', 'EI1023', '5'),
 ('S1120', '2', 'I1060', 'EI1024', '6');